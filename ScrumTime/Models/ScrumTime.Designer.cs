//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ScrumTime.Models", "FK_Stories_Projects", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ScrumTime.Models.Project), "Story", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ScrumTime.Models.Story), true)]
[assembly: EdmRelationshipAttribute("ScrumTime.Models", "FK_Tasks_Stories", "Story", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ScrumTime.Models.Story), "Task", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ScrumTime.Models.Task), true)]

#endregion

namespace ScrumTime.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ScrumTimeEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ScrumTimeEntities object using the connection string found in the 'ScrumTimeEntities' section of the application configuration file.
        /// </summary>
        public ScrumTimeEntities() : base("name=ScrumTimeEntities", "ScrumTimeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ScrumTimeEntities object.
        /// </summary>
        public ScrumTimeEntities(string connectionString) : base(connectionString, "ScrumTimeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ScrumTimeEntities object.
        /// </summary>
        public ScrumTimeEntities(EntityConnection connection) : base(connection, "ScrumTimeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Project> Projects
        {
            get
            {
                if ((_Projects == null))
                {
                    _Projects = base.CreateObjectSet<Project>("Projects");
                }
                return _Projects;
            }
        }
        private ObjectSet<Project> _Projects;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Story> Stories
        {
            get
            {
                if ((_Stories == null))
                {
                    _Stories = base.CreateObjectSet<Story>("Stories");
                }
                return _Stories;
            }
        }
        private ObjectSet<Story> _Stories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Task> Tasks
        {
            get
            {
                if ((_Tasks == null))
                {
                    _Tasks = base.CreateObjectSet<Task>("Tasks");
                }
                return _Tasks;
            }
        }
        private ObjectSet<Task> _Tasks;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Projects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjects(Project project)
        {
            base.AddObject("Projects", project);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Stories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStories(Story story)
        {
            base.AddObject("Stories", story);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tasks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTasks(Task task)
        {
            base.AddObject("Tasks", task);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ScrumTime.Models", Name="Project")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Project : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Project object.
        /// </summary>
        /// <param name="projectId">Initial value of the ProjectId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Project CreateProject(global::System.Int32 projectId, global::System.String name)
        {
            Project project = new Project();
            project.ProjectId = projectId;
            project.Name = name;
            return project;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectId
        {
            get
            {
                return _ProjectId;
            }
            set
            {
                if (_ProjectId != value)
                {
                    OnProjectIdChanging(value);
                    ReportPropertyChanging("ProjectId");
                    _ProjectId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProjectId");
                    OnProjectIdChanged();
                }
            }
        }
        private global::System.Int32 _ProjectId;
        partial void OnProjectIdChanging(global::System.Int32 value);
        partial void OnProjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScrumTime.Models", "FK_Stories_Projects", "Story")]
        public EntityCollection<Story> Stories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Story>("ScrumTime.Models.FK_Stories_Projects", "Story");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Story>("ScrumTime.Models.FK_Stories_Projects", "Story", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ScrumTime.Models", Name="Story")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Story : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Story object.
        /// </summary>
        /// <param name="storyId">Initial value of the StoryId property.</param>
        /// <param name="narrative">Initial value of the Narrative property.</param>
        /// <param name="points">Initial value of the Points property.</param>
        /// <param name="priority">Initial value of the Priority property.</param>
        /// <param name="projectId">Initial value of the ProjectId property.</param>
        public static Story CreateStory(global::System.Int32 storyId, global::System.String narrative, global::System.Int32 points, global::System.Int32 priority, global::System.Int32 projectId)
        {
            Story story = new Story();
            story.StoryId = storyId;
            story.Narrative = narrative;
            story.Points = points;
            story.Priority = priority;
            story.ProjectId = projectId;
            return story;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StoryId
        {
            get
            {
                return _StoryId;
            }
            set
            {
                if (_StoryId != value)
                {
                    OnStoryIdChanging(value);
                    ReportPropertyChanging("StoryId");
                    _StoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StoryId");
                    OnStoryIdChanged();
                }
            }
        }
        private global::System.Int32 _StoryId;
        partial void OnStoryIdChanging(global::System.Int32 value);
        partial void OnStoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Narrative
        {
            get
            {
                return _Narrative;
            }
            set
            {
                OnNarrativeChanging(value);
                ReportPropertyChanging("Narrative");
                _Narrative = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Narrative");
                OnNarrativeChanged();
            }
        }
        private global::System.String _Narrative;
        partial void OnNarrativeChanging(global::System.String value);
        partial void OnNarrativeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Points
        {
            get
            {
                return _Points;
            }
            set
            {
                OnPointsChanging(value);
                ReportPropertyChanging("Points");
                _Points = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Points");
                OnPointsChanged();
            }
        }
        private global::System.Int32 _Points;
        partial void OnPointsChanging(global::System.Int32 value);
        partial void OnPointsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserDefinedId
        {
            get
            {
                return _UserDefinedId;
            }
            set
            {
                OnUserDefinedIdChanging(value);
                ReportPropertyChanging("UserDefinedId");
                _UserDefinedId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserDefinedId");
                OnUserDefinedIdChanged();
            }
        }
        private global::System.String _UserDefinedId;
        partial void OnUserDefinedIdChanging(global::System.String value);
        partial void OnUserDefinedIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                OnPriorityChanging(value);
                ReportPropertyChanging("Priority");
                _Priority = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Priority");
                OnPriorityChanged();
            }
        }
        private global::System.Int32 _Priority;
        partial void OnPriorityChanging(global::System.Int32 value);
        partial void OnPriorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectId
        {
            get
            {
                return _ProjectId;
            }
            set
            {
                OnProjectIdChanging(value);
                ReportPropertyChanging("ProjectId");
                _ProjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectId");
                OnProjectIdChanged();
            }
        }
        private global::System.Int32 _ProjectId;
        partial void OnProjectIdChanging(global::System.Int32 value);
        partial void OnProjectIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScrumTime.Models", "FK_Stories_Projects", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ScrumTime.Models.FK_Stories_Projects", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ScrumTime.Models.FK_Stories_Projects", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ScrumTime.Models.FK_Stories_Projects", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("ScrumTime.Models.FK_Stories_Projects", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScrumTime.Models", "FK_Tasks_Stories", "Task")]
        public EntityCollection<Task> Tasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Task>("ScrumTime.Models.FK_Tasks_Stories", "Task");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Task>("ScrumTime.Models.FK_Tasks_Stories", "Task", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ScrumTime.Models", Name="Task")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Task : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Task object.
        /// </summary>
        /// <param name="taskId">Initial value of the TaskId property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="storyId">Initial value of the StoryId property.</param>
        public static Task CreateTask(global::System.Int32 taskId, global::System.String description, global::System.Int32 storyId)
        {
            Task task = new Task();
            task.TaskId = taskId;
            task.Description = description;
            task.StoryId = storyId;
            return task;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaskId
        {
            get
            {
                return _TaskId;
            }
            set
            {
                if (_TaskId != value)
                {
                    OnTaskIdChanging(value);
                    ReportPropertyChanging("TaskId");
                    _TaskId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TaskId");
                    OnTaskIdChanged();
                }
            }
        }
        private global::System.Int32 _TaskId;
        partial void OnTaskIdChanging(global::System.Int32 value);
        partial void OnTaskIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Hours
        {
            get
            {
                return _Hours;
            }
            set
            {
                OnHoursChanging(value);
                ReportPropertyChanging("Hours");
                _Hours = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Hours");
                OnHoursChanged();
            }
        }
        private Nullable<global::System.Decimal> _Hours;
        partial void OnHoursChanging(Nullable<global::System.Decimal> value);
        partial void OnHoursChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StoryId
        {
            get
            {
                return _StoryId;
            }
            set
            {
                OnStoryIdChanging(value);
                ReportPropertyChanging("StoryId");
                _StoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StoryId");
                OnStoryIdChanged();
            }
        }
        private global::System.Int32 _StoryId;
        partial void OnStoryIdChanging(global::System.Int32 value);
        partial void OnStoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AssignedTo
        {
            get
            {
                return _AssignedTo;
            }
            set
            {
                OnAssignedToChanging(value);
                ReportPropertyChanging("AssignedTo");
                _AssignedTo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AssignedTo");
                OnAssignedToChanged();
            }
        }
        private global::System.String _AssignedTo;
        partial void OnAssignedToChanging(global::System.String value);
        partial void OnAssignedToChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScrumTime.Models", "FK_Tasks_Stories", "Story")]
        public Story Story
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Story>("ScrumTime.Models.FK_Tasks_Stories", "Story").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Story>("ScrumTime.Models.FK_Tasks_Stories", "Story").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Story> StoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Story>("ScrumTime.Models.FK_Tasks_Stories", "Story");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Story>("ScrumTime.Models.FK_Tasks_Stories", "Story", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
