// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace ScrumTime.Controllers {
    public partial class StoryController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected StoryController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult ReadOnly() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.ReadOnly);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Edit() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Edit);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Save() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Save);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Delete() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Delete);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult StoryActionCancelOnly() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.StoryActionCancelOnly);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public StoryController Actions { get { return MVC.Story; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Story";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
            public readonly string BacklogByPriority = "BacklogByPriority";
            public readonly string ListByPriority = "ListByPriority";
            public readonly string ReadOnly = "ReadOnly";
            public readonly string Edit = "Edit";
            public readonly string New = "New";
            public readonly string Save = "Save";
            public readonly string Delete = "Delete";
            public readonly string StoryActionCancelOnly = "StoryActionCancelOnly";
            public readonly string Index = "Index";
        }


        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string Backlog = "~/Views/Story/Backlog.ascx";
            public readonly string Edit = "~/Views/Story/Edit.ascx";
            public readonly string List = "~/Views/Story/List.ascx";
            public readonly string ReadOnly = "~/Views/Story/ReadOnly.ascx";
            public readonly string ReadOnlyColumns = "~/Views/Story/ReadOnlyColumns.ascx";
            public readonly string Schedule = "~/Views/Story/Schedule.ascx";
            public readonly string StoryActionCancelOnly = "~/Views/Story/StoryActionCancelOnly.ascx";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_StoryController: ScrumTime.Controllers.StoryController {
        public T4MVC_StoryController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult BacklogByPriority() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.BacklogByPriority);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ListByPriority() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.ListByPriority);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ReadOnly(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.ReadOnly);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Edit(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Edit);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult New() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.New);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Save(System.Web.Mvc.FormCollection collection) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Save);
            callInfo.RouteValueDictionary.Add("collection", collection);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Delete(int id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Delete);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Delete(int id, System.Web.Mvc.FormCollection collection) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Delete);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("collection", collection);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult StoryActionCancelOnly(int storyId) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.StoryActionCancelOnly);
            callInfo.RouteValueDictionary.Add("storyId", storyId);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Index() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Index);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591
